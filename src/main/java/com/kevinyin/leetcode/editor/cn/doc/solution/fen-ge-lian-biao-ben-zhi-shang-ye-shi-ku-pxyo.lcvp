### 解题思路

此处撰写解题思路
这道题相当于快排的第一步……具体来说就是遍历链表，分割为small和big两个部分，然后再把small和big合并就可以了。

### 代码

* java

```java
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {

     private ListNode[] partitionHelper(ListNode head, int target) {
        ListNode p = head;
        ListNode small = new ListNode(0); ListNode pointerSmall = small;
        ListNode big = new ListNode(0); ListNode pointerBig = big;
        while (p != null) {
            if (p.val < target) {
                pointerSmall.next = new ListNode(p.val);
                pointerSmall = pointerSmall.next;
                small.val++;
            }
            else {
                pointerBig.next = new ListNode(p.val);
                pointerBig = pointerBig.next;
                big.val++;
            }
            p = p.next;
        }
        return new ListNode[]{small, big};
    }

    private ListNode catenate(ListNode a, ListNode b) {
        if (a.val == 0) {
            return b.next;
        }
        else {
            ListNode endPointer = a;
            while (endPointer.next != null) {
                endPointer = endPointer.next;
            }
            endPointer.next = b.next;
            return a.next;
        }

    }

    public ListNode partition(ListNode head, int x) {
        ListNode[] result = partitionHelper(head, x);
        return catenate(result[0], result[1]);
    }
}
```

